import { WorkOrder, Site, Contact, User, WorkOrderMessage, WorkOrderEvent } from '@/types/work-orders';

// Mock Sites
export const mockSites: Site[] = [
  {
    id: 'site-001',
    name: 'Tuscany Bay HOA',
    address: '123 Bay Drive, Miami, FL 33139',
    branch_id: 'branch-001',
    created_at: new Date('2024-01-01'),
    updated_at: new Date('2024-01-15'),
  },
  {
    id: 'site-002',
    name: 'Sunset Gardens',
    address: '456 Sunset Blvd, Orlando, FL 32801',
    branch_id: 'branch-001',
    created_at: new Date('2024-01-02'),
    updated_at: new Date('2024-01-16'),
  },
  {
    id: 'site-003',
    name: 'Oak Ridge Community',
    address: '789 Oak Ridge Dr, Tampa, FL 33602',
    branch_id: 'branch-002',
    created_at: new Date('2024-01-03'),
    updated_at: new Date('2024-01-17'),
  },
  {
    id: 'site-004',
    name: 'Meadowbrook Commons',
    address: '321 Meadowbrook Ln, Jacksonville, FL 32256',
    branch_id: 'branch-002',
    created_at: new Date('2024-01-04'),
    updated_at: new Date('2024-01-18'),
  },
  {
    id: 'site-005',
    name: 'Pine Valley HOA',
    address: '654 Pine Valley Rd, Gainesville, FL 32601',
    branch_id: 'branch-003',
    created_at: new Date('2024-01-05'),
    updated_at: new Date('2024-01-19'),
  },
];

// Mock Contacts
export const mockContacts: Contact[] = [
  {
    id: 'contact-001',
    name: 'Arnold Feigin',
    email: 'arnold.feigin@tuscanybay.com',
    phone: '(305) 555-0101',
    site_id: 'site-001',
    created_at: new Date('2024-01-01'),
    updated_at: new Date('2024-01-15'),
  },
  {
    id: 'contact-002',
    name: 'Lynn Feigin',
    email: 'lynn.feigin@sunsetgardens.com',
    phone: '(407) 555-0102',
    site_id: 'site-002',
    created_at: new Date('2024-01-02'),
    updated_at: new Date('2024-01-16'),
  },
  {
    id: 'contact-003',
    name: 'Mike Johnson',
    email: 'mike.johnson@oakridge.com',
    phone: '(813) 555-0103',
    site_id: 'site-003',
    created_at: new Date('2024-01-03'),
    updated_at: new Date('2024-01-17'),
  },
  {
    id: 'contact-004',
    name: 'Sarah Wilson',
    email: 'sarah.wilson@meadowbrook.com',
    phone: '(904) 555-0104',
    site_id: 'site-004',
    created_at: new Date('2024-01-04'),
    updated_at: new Date('2024-01-18'),
  },
  {
    id: 'contact-005',
    name: 'Robert Chen',
    email: 'robert.chen@pinevalley.com',
    phone: '(352) 555-0105',
    site_id: 'site-005',
    created_at: new Date('2024-01-05'),
    updated_at: new Date('2024-01-19'),
  },
  {
    id: 'contact-006',
    name: 'Maria Garcia',
    email: 'maria.garcia@riverside.com',
    phone: '(305) 555-0106',
    site_id: 'site-001',
    created_at: new Date('2024-01-06'),
    updated_at: new Date('2024-01-20'),
  },
];

// Mock Users
export const mockUsers: User[] = [
  {
    id: 'user-001',
    name: 'John Smith',
    email: 'john.smith@company.com',
    branch_id: 'branch-001',
    role: 'manager',
    created_at: new Date('2024-01-01'),
    updated_at: new Date('2024-01-15'),
  },
  {
    id: 'user-002',
    name: 'Mike Johnson',
    email: 'mike.johnson@company.com',
    branch_id: 'branch-001',
    role: 'staff',
    created_at: new Date('2024-01-02'),
    updated_at: new Date('2024-01-16'),
  },
  {
    id: 'user-003',
    name: 'David Wilson',
    email: 'david.wilson@company.com',
    branch_id: 'branch-002',
    role: 'manager',
    created_at: new Date('2024-01-03'),
    updated_at: new Date('2024-01-17'),
  },
  {
    id: 'user-004',
    name: 'Sarah Davis',
    email: 'sarah.davis@company.com',
    branch_id: 'branch-002',
    role: 'staff',
    created_at: new Date('2024-01-04'),
    updated_at: new Date('2024-01-18'),
  },
];

// Mock Work Orders
export const mockWorkOrders: WorkOrder[] = [
  {
    id: 'WO-001',
    status: 'new',
    site_id: 'site-001',
    customer_id: 'customer-001',
    contact_id: 'contact-001',
    owner_user_id: undefined,
    tags: ['irrigation', 'repair', 'urgent'],
    external_ref: 'IRR-2024-001',
    subject: 'Irrigation System Repair',
    body: 'The main irrigation system in the common area is not working. Sprinklers are not activating on schedule.',
    estimated_hours: 4,
    last_activity: new Date('2024-01-20T10:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-20T09:00:00Z'),
    updated_at: new Date('2024-01-20T10:00:00Z'),
    site: mockSites[0],
    contact: mockContacts[0],
  },
  {
    id: 'WO-002',
    status: 'open',
    site_id: 'site-002',
    customer_id: 'customer-002',
    contact_id: 'contact-002',
    owner_user_id: 'user-002',
    tags: ['landscaping', 'maintenance'],
    external_ref: 'LAND-2024-002',
    subject: 'Landscape Maintenance',
    body: 'Monthly landscape maintenance including mowing, edging, and plant care needed.',
    estimated_hours: 8,
    last_activity: new Date('2024-01-20T08:00:00Z'),
    reopen_count: 1,
    created_at: new Date('2024-01-19T14:00:00Z'),
    updated_at: new Date('2024-01-20T08:00:00Z'),
    site: mockSites[1],
    contact: mockContacts[1],
    owner: mockUsers[1],
  },
  {
    id: 'WO-003',
    status: 'open',
    site_id: 'site-003',
    customer_id: 'customer-003',
    contact_id: 'contact-003',
    owner_user_id: 'user-002',
    tags: ['tree-service', 'trimming'],
    external_ref: 'TREE-2024-003',
    subject: 'Tree Trimming Service',
    body: 'Several trees need trimming and pruning to maintain proper clearance from buildings and walkways.',
    estimated_hours: 6,
    last_activity: new Date('2024-01-19T16:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-18T11:00:00Z'),
    updated_at: new Date('2024-01-19T16:00:00Z'),
    site: mockSites[2],
    contact: mockContacts[2],
    owner: mockUsers[1],
  },
  {
    id: 'WO-004',
    status: 'new',
    site_id: 'site-004',
    customer_id: 'customer-004',
    contact_id: 'contact-004',
    owner_user_id: undefined,
    tags: ['emergency', 'sprinkler', 'repair'],
    external_ref: 'EMG-2024-004',
    subject: 'Emergency Sprinkler Repair',
    body: 'Critical sprinkler system failure in the main entrance area. Immediate attention required.',
    estimated_hours: 2,
    last_activity: new Date('2024-01-20T11:30:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-20T11:30:00Z'),
    updated_at: new Date('2024-01-20T11:30:00Z'),
    site: mockSites[3],
    contact: mockContacts[3],
  },
  {
    id: 'WO-005',
    status: 'open',
    site_id: 'site-005',
    customer_id: 'customer-005',
    contact_id: 'contact-005',
    owner_user_id: 'user-004',
    tags: ['lawn-care', 'monthly'],
    external_ref: 'LAWN-2024-005',
    subject: 'Monthly Lawn Care',
    body: 'Regular monthly lawn maintenance including fertilization, weed control, and mowing.',
    estimated_hours: 5,
    last_activity: new Date('2024-01-19T15:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-15T09:00:00Z'),
    updated_at: new Date('2024-01-19T15:00:00Z'),
    site: mockSites[4],
    contact: mockContacts[4],
    owner: mockUsers[3],
  },
  {
    id: 'WO-006',
    status: 'open',
    site_id: 'site-001',
    customer_id: 'customer-006',
    contact_id: 'contact-006',
    owner_user_id: 'user-001',
    tags: ['pest-control', 'treatment'],
    external_ref: 'PEST-2024-006',
    subject: 'Pest Control Treatment',
    body: 'Quarterly pest control treatment needed for common areas and perimeter.',
    last_activity: new Date('2024-01-18T13:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-17T10:00:00Z'),
    updated_at: new Date('2024-01-18T13:00:00Z'),
    site: mockSites[0],
    contact: mockContacts[5],
    owner: mockUsers[0],
  },
  {
    id: 'WO-007',
    status: 'new',
    site_id: 'site-002',
    customer_id: 'customer-002',
    contact_id: 'contact-002',
    owner_user_id: undefined,
    tags: ['pool', 'cleaning'],
    external_ref: 'POOL-2024-007',
    subject: 'Pool Area Cleaning',
    body: 'Pool deck and surrounding area need cleaning and maintenance.',
    last_activity: new Date('2024-01-20T12:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-20T12:00:00Z'),
    updated_at: new Date('2024-01-20T12:00:00Z'),
    site: mockSites[1],
    contact: mockContacts[1],
  },
  {
    id: 'WO-008',
    status: 'open',
    site_id: 'site-001',
    customer_id: 'customer-001',
    contact_id: 'contact-001',
    owner_user_id: 'user-002',
    tags: ['gate', 'maintenance'],
    external_ref: 'GATE-2024-008',
    subject: 'Gate Maintenance',
    body: 'Main entrance gate needs lubrication and adjustment for smooth operation.',
    last_activity: new Date('2024-01-19T17:00:00Z'),
    reopen_count: 0,
    created_at: new Date('2024-01-16T14:00:00Z'),
    updated_at: new Date('2024-01-19T17:00:00Z'),
    site: mockSites[0],
    contact: mockContacts[0],
    owner: mockUsers[1],
  },
];

// Mock Work Order Messages
export const mockWorkOrderMessages: WorkOrderMessage[] = [
  {
    id: 'msg-001',
    work_order_id: 'WO-001',
    sender: 'customer',
    visibility: 'public',
    body: 'The irrigation system has been down for 2 days now. This is affecting the landscaping.',
    attachments: [],
    created_at: new Date('2024-01-20T09:00:00Z'),
  },
  {
    id: 'msg-002',
    work_order_id: 'WO-001',
    sender: 'staff',
    visibility: 'public',
    body: 'Thank you for reporting this. I\'ll investigate the issue and get back to you within 2 hours.',
    attachments: [],
    created_at: new Date('2024-01-20T10:00:00Z'),
  },
  {
    id: 'msg-003',
    work_order_id: 'WO-002',
    sender: 'customer',
    visibility: 'public',
    body: 'The landscaping looks great after the maintenance. Thank you for the excellent service.',
    attachments: [],
    created_at: new Date('2024-01-20T08:00:00Z'),
  },
];

// Mock Work Order Events
export const mockWorkOrderEvents: WorkOrderEvent[] = [
  {
    id: 'event-001',
    work_order_id: 'WO-001',
    event_type: 'created',
    actor: 'system',
    at: new Date('2024-01-20T09:00:00Z'),
    meta: { source: 'web_form' },
  },
  {
    id: 'event-002',
    work_order_id: 'WO-002',
    event_type: 'assigned',
    actor: 'user-001',
    at: new Date('2024-01-19T15:00:00Z'),
    meta: { assignee_id: 'user-002' },
  },
  {
    id: 'event-003',
    work_order_id: 'WO-002',
    event_type: 'reopened',
    actor: 'customer-002',
    at: new Date('2024-01-20T08:00:00Z'),
    meta: { reason: 'customer_feedback' },
  },
];

// Helper functions
export const getWorkOrdersByStatus = (status: string) => 
  mockWorkOrders.filter(wo => wo.status === status);

export const getWorkOrdersByAssignee = (userId: string) => 
  mockWorkOrders.filter(wo => wo.owner_user_id === userId);

export const getWorkOrdersBySite = (siteId: string) => 
  mockWorkOrders.filter(wo => wo.site_id === siteId);

export const getWorkOrderStats = () => {
  const total = mockWorkOrders.length;
  const open = mockWorkOrders.filter(wo => wo.status === 'open').length;
  const new_orders = mockWorkOrders.filter(wo => wo.status === 'new').length;
  const closed = mockWorkOrders.filter(wo => wo.status === 'closed').length;
  
  return { total, open, new: new_orders, closed };
};
